{"version":3,"file":"static/js/160.b8f3ea9d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","pages/Movies.jsx","services/fetch.js","utils/placehold.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapperSpiner\":\"Loader_wrapperSpiner__x8OsO\"};","import css from './Loader.module.css';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div className={css.wrapperSpiner}>\n    <RotatingLines\n      strokeColor=\"white\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"150\"\n      visible={true}\n    />\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesGalleryContainer\":\"MoviesList_moviesGalleryContainer__LWOU4\",\"movieCardLink\":\"MoviesList_movieCardLink__B-PKt\",\"cardLinkMedia\":\"MoviesList_cardLinkMedia__zQPcd\",\"cardLinkTitle\":\"MoviesList_cardLinkTitle__Gpjff\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport { PLACEHOLDER } from 'utils/placehold';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesGalleryContainer}>\n      {films.map(({ id, title, poster_path }) => (\n        <li className={css.movieCard} key={id}>\n          <Link\n            className={css.movieCardLink}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            <img\n              className={css.cardLinkMedia}\n              src={\n                poster_path\n                  ? `http://image.tmdb.org/t/p/w342${poster_path}`\n                  : PLACEHOLDER + '?text=' + title\n              }\n              alt={title}\n              width=\"342\"\n              height=\"520\"\n            />\n            <h3 className={css.cardLinkTitle}>{title}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapSearch\":\"Search_wrapSearch__O4m1m\",\"wrapForm\":\"Search_wrapForm__0dnaR\",\"wrapInput\":\"Search_wrapInput__7fWUg\",\"wrapBtn\":\"Search_wrapBtn__4S8if\"};","import css from './Search.module.css';\nconst Searchbar = ({ onSubmitSearchBar, value }) => (\n  <div className={css.wrapSearch}>\n    <form className={css.wrapForm} onSubmit={onSubmitSearchBar}>\n      <input\n        className={css.wrapInput}\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        defaultValue={value}\n        placeholder=\"Search movies\"\n      />\n      <button className={css.wrapBtn}>\n        <span>Search</span>\n      </button>\n    </form>\n  </div>\n);\n\nexport default Searchbar;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies, onFetchError } from 'services/fetch';\nimport { toast } from 'react-toastify';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport css from 'pages/Pages.module.css';\nimport { Loader } from 'components/Loader/Loader';\nimport Searchbar from 'components/Search/Search';\nconst endPoint = '/search/movie';\n\nconst Movies = () => {\n  const [loading, setLoading] = useState(false);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    if (films.length > 0) {\n      return;\n    }\n\n    setLoading(true);\n    fetchSearchMovies(endPoint, searchQuery)\n      .then(data => {\n        setFilms(data.results);\n      })\n      .catch(onFetchError)\n      .finally(() => setLoading(false));\n  }, [films, searchQuery]);\n  const onSubmitSearchBar = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchValue = form.search.value\n      .trim()\n      .toLowerCase()\n      .split(' ')\n      .join('+');\n\n    if (searchValue === '') {\n      toast.info('Enter your request, please!');\n      setSearchParams({});\n      setFilms([]);\n      return;\n    }\n\n    if (searchValue === searchQuery) {\n      toast.info('Please enter a new request!');\n      return;\n    }\n\n    setSearchParams({ query: searchValue });\n    setFilms([]);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmitSearchBar={onSubmitSearchBar} value={searchQuery} />\n      <section className={css.section}>\n        {loading && <Loader />}\n        <MoviesList films={films} />\n      </section>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a67099fe4a121db273ee398ffda09784';\n\nexport async function fetchMovies(endPoint) {\n  const url = `${BASE_URL}${endPoint}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\nexport async function fetchSearchMovies(endPoint, query) {\n  const url = `${BASE_URL}${endPoint}?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n  const url = `${BASE_URL}${endPoint}/${movieId}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieCast(endPoint, movieId) {\n  const url = `${BASE_URL}${endPoint}/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n  const url = `${BASE_URL}${endPoint}/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\nexport function onFetchError() {\n  toast.error(\n    'Oops! Something went wrong! Try refreshing the page or make another choice!'\n  );\n}\n","export const PLACEHOLDER = 'https://placehold.jp/16/7a7a7a/ffffff/138x255.png';\nexport const PLACEHOLDERINFO =\n  'https://placehold.jp/16/7a7a7a/ffffff/154x231.png';\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionTitle\":\"Pages_sectionTitle__aU-YE\",\"section\":\"Pages_section__rhEby\",\"sectionSecondaryTitle\":\"Pages_sectionSecondaryTitle__PZNnQ\",\"back\":\"Pages_back__8Em4Y\",\"wrapDenails\":\"Pages_wrapDenails__y8rCZ\",\"wrapDenailsCard\":\"Pages_wrapDenailsCard__Au+zp\",\"additionalInfo\":\"Pages_additionalInfo__bX31I\",\"infoBtn\":\"Pages_infoBtn__6WwxP\",\"info\":\"Pages_info__KksUC\"};"],"names":["Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","films","location","useLocation","map","id","title","poster_path","to","state","from","src","PLACEHOLDER","alt","height","onSubmitSearchBar","value","onSubmit","type","name","autoComplete","autoFocus","defaultValue","placeholder","useState","loading","setLoading","setFilms","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","length","fetchSearchMovies","then","data","results","catch","onFetchError","finally","Search","e","preventDefault","searchValue","currentTarget","search","trim","toLowerCase","split","join","toast","query","MoviesList","BASE_URL","API_KEY","fetchMovies","endPoint","url","axios","response","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","PLACEHOLDERINFO"],"sourceRoot":""}